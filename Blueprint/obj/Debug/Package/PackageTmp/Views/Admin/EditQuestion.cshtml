@using Blueprint.Models
@model Blueprint.Models.TestHeader
@{
    ViewBag.Title = "EditQuestion";
    Layout = "~/Views/Shared/_Layout.cshtml";
    List<QuestionItem> myQues = ViewBag.ListQuestion as List<QuestionItem>;
    IDictionary<int, List<AnswerItem>> myAns = ViewBag.ListAnswer as IDictionary<int, List<AnswerItem>>;
}

<style>

    .row span {
        margin: 0 0 0 20px;
        padding-top: 10px;
        color: #1466B5;
        font-weight: bold;
        display: inline-block;
        width: 200px;
        float: left;
    }

    .rightside {
        position: relative;
        width: calc(100% - 300px);
        float: right;
        right: 10px;
    }

    .icon-bar {
        position:absolute;
        left: -70px;
        top: 10px;
    }

        .icon-bar * {
            margin: 0 5px;
        }

    .validate-message {
        width: 100%;
        float: left;
        padding: 0 0 20px 0;
        color: red;
    }

    .active {
        display: block !important;
    }

    .blob {
        display: none;
    }

    .disable {
        background: #DEAAAA !important;
    }

    .div-radio {
        padding: 10px 0;
        width: 50px;
        float:left;
        text-align: center;
        clear: both;
    }

    .div-textbox {
        width: calc(100% - 100px);
        float: left;
    }

    .button {
        width:870px
    }
    @@media (max-width:997px) {

        .button {
            width:550px;
        }
        .button a {
            width: 160px;
        }
    }

    @@media (max-width:580px) {

        .button {
            width:180px;
        }

        .row span {
            width: 150px;
        }

        .rightside {
            width: calc(100% - 200px)
        }
    }

     @@media (max-width:390px) {

        .row span {
            width: 0;
            display:none;
        }

        .rightside {
            width: 70%;
        }
    }
</style>
<section class="bodymain">
    <div class="wrapperin">
        <div class="aboutheading">
            @if (Model == null)
            {
                <span>Không tìm thấy</span>
                return;
            }
            <span>@Model.Title</span>
        </div>
        <div class="enquiremain">
            
            <div class="button">
                <a class="fakea disable" id="btnPrev"><img src="~/Images/rightarrow.png" style="margin-right:20px" />Câu trước</a>
                <a class="fakea" id="btnNext">Câu kế tiếp<img src="~/Images/leftarrow.png" style="margin-left:20px" /></a>
                <a class="fakea" id="btnFinish">Kết thúc</a>
            </div>
            
            <div class="enquiremainheading">Câu hỏi số <span class="counter">1</span> / @Model.NoQuestions:</div>
            @for (int i = 1; i <= Model.NoQuestions; i++)
            {
                QuestionItem itemQues = myQues.SingleOrDefault(item => item.STT.Equals(i));
                <div class="blob @(i == 1 ? "active" : "")">
                    <div class="row">
                        <span>Nội dung câu hỏi:</span>
                        <div class="rightside">
                            <input class="textbox question" placeholder="Nhập câu hỏi"
                                   value="@(Model.ActualNoQuestions >= i ? itemQues.Content: "")"
                                   data="@(Model.ActualNoQuestions >= i ? itemQues.ID : -1)" />
                        </div>
                    </div>
                    <div class="row">
                        <span>Câu trả lời:</span>
                        <div class="rightside">
                            <div class="icon-bar">
                                <img class="action_icon more" src="~/Images/plus-icon.png" title="Thêm câu trả lời" />
                                <img class="action_icon less" src="~/Images/del-icon.jpg" title="Bỏ câu trả lời" />
                            </div>
                            <div class="chooser">
                                @if (itemQues == null)
                                {
                                    <div class="chooser-inside">
                                        <div class="div-radio">
                                            <input class="sel" type="radio" name="radio_@i" />
                                        </div>
                                        <div class="div-textbox">
                                            <input class="textbox opt" placeholder="Nhập câu trả lời" value="" data="-1"/>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    foreach (var item in myAns[itemQues.ID])
                                    {
                                        <div class="chooser-inside">
                                            <div class="div-radio">
                                                <input class="sel" type="radio" name="radio_@i" @(item.IsCorrect ? "checked" : "")/>
                                            </div>
                                            <div class="div-textbox">
                                                <input class="textbox opt" placeholder="Nhập câu trả lời" value="@item.Content" data="@item.ID" />
                                            </div>
                                        </div>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <span>Gợi ý:</span>
                        <div class="rightside">
                            <input class="textbox Hint" placeholder="Nhập gợi ý" value="@(itemQues == null ? "" :itemQues.Hint)" />
                        </div>
                    </div>
                </div>
            }
            <div class="validate-message"></div>
        </div>
    </div>
</section>

<script type="text/javascript">
    $(document).ready(function () {

        $.each($('.blob'), function (i, o) {
            var size = $(this).find('.chooser-inside').size();
            $(this).find('.icon-bar').css('top', (10 + (size - 1) * 53) + 'px');
        });

        $('#btnNext').click(function () {

            if ($(this).hasClass('disable')) {
                return;
            }

            var counter = Number($('.counter').text());
            if (isValid(counter - 1)) {
                $.when(SaveData()).then(function () {
                    $('.blob').eq(counter - 1).removeClass('active')
                    $('.blob').eq(counter).fadeIn(500).promise().done(function () {
                        $('.blob').eq(counter).addClass('active').removeAttr('style');
                        $('.counter').text(counter + 1);
                        $('.disable').removeClass('disable');
                        if (counter == '@(Model.NoQuestions - 1)') {
                            $('#btnNext').addClass('disable');
                        };
                    })
                })
            }
        })

        $('#btnPrev').click(function () {

            if ($(this).hasClass('disable')) {
                return;
            }

            var counter = Number($('.counter').text());
            if (isValid(counter - 1)) {

                $.when(SaveData()).then(function () {
                    $('.blob').eq(counter - 1).removeClass('active')
                    $('.blob').eq(counter - 2).fadeIn(500).promise().done(function () {
                        $('.blob').eq(counter - 2).addClass('active').removeAttr('style');
                        $('.counter').text(counter - 1);
                        $('.disable').removeClass('disable');
                        if ($('.counter').text() == '1') {
                            $('#btnPrev').addClass('disable');
                        };
                    })
                })
            }
        })

        $('#btnFinish').click(function () {
            var counter = Number($('.counter').text());
            if (isValid(counter - 1)) {
                $.when(SaveData()).then(function () {
                    $.post('/Admin/Unlock', {
                        id: Number('@Model.ID'),
                        entity: "Test"
                    }, function () {
                        location.href = '@Url.Action("Test","Admin")'
                    })
                })
            }
        });

    function SaveData() {
        $.ajax({
            url: '/Admin/ModifiedQuestion',
            data: {
                Id: Number($('.question:visible').attr('data')),
                IdHeader: Number('@Model.ID'),
                    Content: $('.question:visible').val(),
                    Hint: $('.Hint:visible').val()
                },
                success: function (data) {
                    $.each($('.opt:visible'), function (i, o) {
                        $.ajax({
                            url: '/Admin/ModifiedAnswer',
                            data: {
                                Id: Number($(this).attr('data')),
                                IdQuestion: Number(data),
                                Content: $(this).val(),
                                IsCorrect: $('.sel:visible').eq(i).is(':checked')
                            },
                            async: false
                        });
                    });
                },
                async: false
            });
        }

        $(document).on('keydown', '.opt', function (e) {
            if (e.which == 40 || e.keyCode == 40) {
                $('.more:visible').click();
            }

            if (e.which == 38 || e.keyCode == 38) {
                $('.less:visible').click();
            }
        })

        $('.more').click(function () {
            var html = "<div class='chooser-inside'>" +
                          "<div class='div-radio'>" +
                             "<input class='sel' type='radio' name='" + $('.sel:visible').eq(0).attr('name') + "' /></div>" +
                          "<div class='div-textbox'>" +
                             "<input class='textbox opt' placeholder='Nhập câu trả lời' value='' data='-1'/></div></div>";

            $(this).parents('.rightside').find('.chooser').append(html);
            $('.icon-bar:visible').animate({ top: "+=53px" }, 500);
        });

        $('.less').click(function () {
            var size = $('.chooser-inside:visible').size();
            if (size == 1) {
                $('.validate-message').show().text('Câu hỏi phải có ít nhất 1 câu trả lời.').delay(1000).fadeOut(1000)
                return;
            }

            if ($('.opt:visible').eq(size - 1).attr('data') != '-1') {
                $('.validate-message').show().text('Câu trả lời đã tồn tại.').delay(1000).fadeOut(1000)
                return;
            }

            $('.chooser-inside:visible').eq(size - 1).remove();
            $('.icon-bar:visible').animate({ top: "-=53px" }, 500);
        })

        function isValid(j) {

            if ($('.question').eq(j).val() == '') {
                $('.question').eq(j).addClass('field_error').focus()
                $('.validate-message').show().text('Câu hỏi không thể bỏ trống.').delay(1000).fadeOut(1000)
                $('.validate-message').promise().done(function () {
                    $('.field_error').removeClass('field_error');
                });
                return false;
            }

            var emptyBox = $('.blob').eq(j).find('.opt').filter(function () {
                return $(this).val() == "";
            })

            if (emptyBox.size() > 0) {
                emptyBox.addClass('field_error')
                $('.validate-message').show().text('Câu trả lời không thể bỏ trống.').delay(1000).fadeOut(1000)
                $('.validate-message').promise().done(function () {
                    $('.field_error').removeClass('field_error');
                });
                return false;
            }

            if ($('.blob').eq(j).find('.sel:checked').size() == 0) {
                $('.validate-message').show().text('Chọn đáp án đúng cho câu hỏi.').delay(1000).fadeOut(1000)
                return false;
            }

            return true;
        }
    });
</script>